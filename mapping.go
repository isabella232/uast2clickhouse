package main

var typeMapping = map[string]string{
	"uast:Identifier":          "Identifier",
	"uast:Comment":             "Comment",
	"uast:InlineImport":        "Import",
	"uast:RuntimeImport":       "Import",
	"uast:Import":              "Import",
	"uast:Operator":            "Operator",
	"uast:QualifiedIdentifier": "Identifier",
	"uast:String":              "StringLiteral",
	"uast:Bool":                "BoolLiteral",
	// Bash
	"bash:|&":                               "Operator",
	"bash:!":                                "Operator",
	"bash:%":                                "Operator",
	"bash:&>":                               "Operator",
	"bash:*":                                "Operator",
	"bash:**":                               "Operator",
	"bash:+":                                "Operator",
	"bash:++":                               "Operator",
	"bash:+=":                               "Operator",
	"bash:+=_arithmetic":                    "Operator",
	"bash:-":                                "Operator",
	"bash:/":                                "Operator",
	"bash:<<<":                              "Operator",
	"Parameter_expansion_operator_':-'":     "Operator", // https://github.com/bblfsh/bash-driver/issues/67
	"bash:Parameter_expansion_operator_'!'": "Operator",
	"bash:Parameter_expansion_operator_'-'": "Operator",
	"bash:AND":                              "Operator",
	"bash:ANDAND":                           "Operator",
	"bash:DOLLAR":                           "Operator",
	"bash:EQ":                               "Operator",
	"bash:ERROR_ELEMENT":                    "Operator",
	"bash:GT":                               "Operator",
	"bash:GTGT":                             "Operator",
	"bash:LBLB_left_bracket":                "Operator",
	"bash:LB_for_arithmetic":                "Operator",
	"bash:LB_left_square":                   "Operator",
	"bash:LPLP":                             "Operator",
	"bash:LT":                               "Operator",
	"bash:LTLT":                             "Operator",
	"bash:OR":                               "Operator",
	"bash:OROR":                             "Operator",
	"bash:RBRB_right_bracket":               "Operator",
	"bash:RB_for_arithmetic":                "Operator",
	"bash:RB_right_square":                  "Operator",
	"bash:RPRP":                             "Operator",
	"bash:SEMICOLONSEMICOLON":               "Operator",
	"bash:arith_EQEQ":                       "Operator",
	"bash:arith_LT":                         "Operator",
	"bash:cond_op":                          "Operator",
	"bash:cond_op_=~":                       "Operator",
	"bash:cond_op_EQEQ":                     "Operator",
	"bash:cond_op_NOT":                      "Operator",
	"bash:elif":                             "Keyword",
	"bash:else":                             "Keyword",
	"bash:here_doc_content":                 "Comment",
	"bash:int_literal":                      "NumericLiteral",
	"bash:let":                              "Keyword",
	"bash:number":                           "NumericLiteral",
	"bash:numrange_filedescriptor":          "Identifier",
	"bash:param_exp_AT":                     "Operator",
	"bash:param_exp_COLON":                  "Operator",
	"bash:param_exp_NUM":                    "Operator",
	"bash:param_exp_NUMNUM":                 "Operator",
	"bash:param_exp_PERC":                   "Operator",
	"bash:param_exp_SLASH":                  "Operator",
	"bash:single_bash_expansion":            "Operator",
	"bash:then":                             "Keyword",
	"bash:trap":                             "Keyword",
	// C++
	"cpp:ASTFunctionStyleMacroDefinition": "Identifier",
	"cpp:ASTMacroDefinition":              "Identifier",
	"cpp:ASTUndef":                        "Identifier",
	"cpp:CPPASTBinaryExpression":          "Operator",
	"cpp:CPPASTLinkageSpecification":      "Identifier",
	"cpp:CPPASTLiteralExpression":         "NumericLiteral",
	"cpp:CPPASTSimpleDeclSpecifier":       "NativeType",
	// C#
	"csharp:AbstractKeyword":                      "Keyword",
	"csharp:AddKeyword":                           "Keyword",
	"csharp:AmpersandAmpersandToken":              "Operator",
	"csharp:AmpersandToken":                       "Operator",
	"csharp:AsKeyword":                            "Keyword",
	"csharp:AssemblyKeyword":                      "Keyword",
	"csharp:AsteriskEqualsToken":                  "Operator",
	"csharp:AsteriskToken":                        "Operator",
	"csharp:AsyncKeyword":                         "Keyword",
	"csharp:AwaitKeyword":                         "Keyword",
	"csharp:BarBarToken":                          "Operator",
	"csharp:BarEqualsToken":                       "Operator",
	"csharp:BarToken":                             "Operator",
	"csharp:BaseKeyword":                          "NativeType",
	"csharp:BoolKeyword":                          "NativeType",
	"csharp:BreakKeyword":                         "Keyword",
	"csharp:ByteKeyword":                          "Keyword",
	"csharp:CaretEqualsToken":                     "Operator",
	"csharp:CaretToken":                           "Operator",
	"csharp:CaseKeyword":                          "Keyword",
	"csharp:CatchKeyword":                         "Keyword",
	"csharp:CharKeyword":                          "NativeType",
	"csharp:CharacterLiteralToken":                "StringLiteral",
	"csharp:ClassKeyword":                         "Keyword",
	"csharp:ConstKeyword":                         "Keyword",
	"csharp:ContinueKeyword":                      "Keyword",
	"csharp:DecimalKeyword":                       "NativeType",
	"csharp:DefaultKeyword":                       "Keyword",
	"csharp:DelegateKeyword":                      "Keyword",
	"csharp:DoKeyword":                            "Keyword",
	"csharp:EqualsEqualsToken":                    "Operator",
	"csharp:EqualsToken":                          "Operator",
	"csharp:ElseKeyword":                          "Keyword",
	"csharp:EnumKeyword":                          "Keyword",
	"csharp:EventKeyword":                         "Keyword",
	"csharp:ExclamationEqualsToken":               "Operator",
	"csharp:ExclamationToken":                     "Operator",
	"csharp:ExternKeyword":                        "Keyword",
	"csharp:FinallyKeyword":                       "Keyword",
	"csharp:FloatKeyword":                         "Keyword",
	"csharp:ForEachKeyword":                       "Keyword",
	"csharp:ForKeyword":                           "Keyword",
	"csharp:GetKeyword":                           "Keyword",
	"csharp:GlobalKeyword":                        "Keyword",
	"csharp:GreaterThanEqualsToken":               "Operator",
	"csharp:GreaterThanGreaterThanEqualsToken":    "Operator",
	"csharp:GreaterThanGreaterThanToken":          "Operator",
	"csharp:GreaterThanToken":                     "Operator",
	"csharp:IfKeyword":                            "Keyword",
	"csharp:InKeyword":                            "Keyword",
	"csharp:IntKeyword":                           "NativeType",
	"csharp:InterfaceKeyword":                     "Keyword",
	"csharp:InternalKeyword":                      "Keyword",
	"csharp:IsKeyword":                            "Keyword",
	"csharp:LessThanEqualsToken":                  "Operator",
	"csharp:LessThanLessThanEqualsToken":          "Operator",
	"csharp:LessThanLessThanToken":                "Operator",
	"csharp:LessThanToken":                        "Operator",
	"csharp:LockKeyword":                          "Keyword",
	"csharp:LongKeyword":                          "NativeType",
	"csharp:MinusEqualsToken":                     "Operator",
	"csharp:MinusMinusToken":                      "Operator",
	"csharp:MinusToken":                           "Operator",
	"csharp:MultiLineCommentTrivia":               "Comment",
	"csharp:NamespaceKeyword":                     "Keyword",
	"csharp:NewKeyword":                           "Keyword",
	"csharp:NullKeyword":                          "NullLiteral",
	"csharp:NumericLiteralToken":                  "NumericLiteral",
	"csharp:ObjectKeyword":                        "Keyword",
	"csharp:OperatorKeyword":                      "Keyword",
	"csharp:OutKeyword":                           "Keyword",
	"csharp:OverrideKeyword":                      "Keyword",
	"csharp:PartialKeyword":                       "Keyword",
	"csharp:PercentToken":                         "Operator",
	"csharp:PlusEqualsToken":                      "Operator",
	"csharp:PlusPlusToken":                        "Operator",
	"csharp:PlusToken":                            "Operator",
	"csharp:PrivateKeyword":                       "Keyword",
	"csharp:ProtectedKeyword":                     "Keyword",
	"csharp:PublicKeyword":                        "Keyword",
	"csharp:QuestionToken":                        "Operator",
	"csharp:ReadOnlyKeyword":                      "Keyword",
	"csharp:RefKeyword":                           "Keyword",
	"csharp:RemoveKeyword":                        "Keyword",
	"csharp:ReturnKeyword":                        "Keyword",
	"csharp:SealedKeyword":                        "Keyword",
	"csharp:SetKeyword":                           "Keyword",
	"csharp:ShortKeyword":                         "NativeType",
	"csharp:SingleLineCommentTrivia":              "Comment",
	"csharp:SingleLineDocumentationCommentTrivia": "Comment",
	"csharp:SlashEqualsToken":                     "Operator",
	"csharp:SlashToken":                           "Operator",
	"csharp:StaticKeyword":                        "Keyword",
	"csharp:StringKeyword":                        "NativeType",
	"csharp:StructKeyword":                        "NativeType",
	"csharp:SwitchKeyword":                        "Keyword",
	"csharp:ThisKeyword":                          "Keyword",
	"csharp:ThrowKeyword":                         "Keyword",
	"csharp:TryKeyword":                           "Keyword",
	"csharp:TypeOfKeyword":                        "Keyword",
	"csharp:UIntKeyword":                          "NativeType",
	"csharp:ULongKeyword":                         "NativeType",
	"csharp:UncheckedKeyword":                     "Keyword",
	"csharp:UsingKeyword":                         "Keyword",
	"csharp:VirtualKeyword":                       "Keyword",
	"csharp:VoidKeyword":                          "NativeType",
	"csharp:WhereKeyword":                         "Keyword",
	"csharp:WhileKeyword":                         "Keyword",
	"csharp:YieldKeyword":                         "Keyword",
	// Go
	"go:BasicLit":   "NumericLiteral",
	"go:ImportSpec": "Import",
	"go:Field":      "Identifier",
	"go:ValueSpec":  "Identifier",
	// Java
	"java:BooleanLiteral":     "BoolLiteral",
	"java:CharacterLiteral":   "StringLiteral",
	"java:IfStatement":        "Keyword",
	"java:Modifier":           "Keyword",
	"java:NullLiteral":        "NullLiteral",
	"java:NumberLiteral":      "NumericLiteral",
	"java:PackageDeclaration": "Keyword",
	"java:PrimitiveType":      "NativeType",
	// JavaScript
	"javascript:BooleanLiteral":   "BoolLiteral",
	"javascript:DirectiveLiteral": "Keyword",
	"javascript:NumericLiteral":   "NumericLiteral",
	"javascript:RegExpLiteral":    "StringLiteral",
	// PHP
	"php:Expr_Instanceof":               "Keyword",
	"php:Scalar_DNumber":                "NumericLiteral",
	"php:Scalar_LNumber":                "NumericLiteral",
	"php:Stmt_DeclareDeclare":           "Identifier",
	"php:Stmt_TraitUseAdaptation_Alias": "Identifier",
	// Python
	"python:Add":           "Operator",
	"python:And":           "Operator",
	"python:Assert":        "Keyword",
	"python:AugAssign":     "Operator",
	"python:BitAnd":        "Operator",
	"python:BitOr":         "Operator",
	"python:BitXor":        "Operator",
	"python:Break":         "Keyword",
	"python:ClassDef":      "Identifier",
	"python:Continue":      "Keyword",
	"python:Delete":        "Keyword",
	"python:Div":           "Operator",
	"python:Eq":            "Operator",
	"python:ExceptHandler": "Identifier",
	"python:Ellipsis":      "Keyword",
	"python:False":         "BoolLiteral",
	"python:FloorDiv":      "Operator",
	"python:For":           "Keyword",
	"python:For.orelse":    "Keyword",
	"python:Global":        "Keyword",
	"python:Gt":            "Operator",
	"python:GtE":           "Operator",
	"python:If":            "Keyword",
	"python:If.orelse":     "Keyword",
	"python:In":            "Operator",
	"python:Invert":        "Operator",
	"python:Is":            "Operator",
	"python:Lambda":        "Keyword",
	"python:LShift":        "Operator",
	"python:Lt":            "Operator",
	"python:LtE":           "Operator",
	"python:Mod":           "Operator",
	"python:Mult":          "Operator",
	"python:NoneLiteral":   "NullLiteral",
	"python:Nonlocal":      "Keyword",
	"python:Not":           "Operator",
	"python:NotEq":         "Operator",
	"python:NotIn":         "Operator",
	"python:Num":           "NumericLiteral",
	"python:Or":            "Operator",
	"python:Pass":          "Keyword",
	"python:Pow":           "Operator",
	"python:Print":         "Keyword",
	"python:Raise":         "Keyword",
	"python:Return":        "Keyword",
	"python:RShift":        "Operator",
	"python:Sub":           "Operator",
	"python:True":          "BoolLiteral",
	"python:Try":           "Keyword",
	"python:Try.else":      "Keyword",
	"python:Try.finalbody": "Keyword",
	"python:Try.handlers":  "Keyword",
	"python:UAdd":          "Operator",
	"python:USub":          "Operator",
	"python:While":         "Keyword",
	"python:With":          "Keyword",
	"python:Yield":         "Keyword",
	// Ruby
	"ruby:and":            "Operator",
	"ruby:float":          "NumericLiteral",
	"ruby:int":            "NumericLiteral",
	"ruby:or":             "Operator",
	"ruby:send_operator":  "Operator",
	"ruby:send_require":   "Keyword",
	"ruby:send_statement": "Keyword",
	"ruby:Symbol":         "StringLiteral",
}
